{"version":3,"sources":["components/reducers/types.js","components/reducers/AuthReducer.js","components/contexts/AuthContext.js","components/contexts/ThemeContext.js","components/reducers/TodoReducer.js","components/contexts/TodoContex.js","components/Navbar.js","components/ThemeToggle.js","components/TodoItem.js","components/TodoForm.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["GET_TODOS","SAVE_TODOS","DELETE_TODO","ADD_TODO","TOGGLE_AUTH","authReducer","state","action","type","AuthContext","createContext","AuthContextProvider","children","useReducer","isAuthenticated","dispatch","useEffect","alert","authContextData","Provider","value","ThemeContext","ThemeContextProvider","useState","isLightTheme","light","background","color","dark","theme","setTheme","ThemeContextData","toggleTheme","todoReducer","payload","console","log","todos","localStorage","getItem","JSON","parse","setItem","stringify","todo","filter","id","TodoContext","TodoContextProvider","TodoContextData","Navbar","useContext","style","className","onClick","ThemeToggle","TodoItem","title","TodoForm","setTitle","onSubmit","event","preventDefault","uuidv4","name","onChange","target","placeholder","required","Todo","map","textAlign","App","TodoContex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd6ca364.chunk.js","sourcesContent":["export const GET_TODOS='GET_TODOS'\r\n\r\nexport const SAVE_TODOS= 'SAVE_TODOS' \r\n\r\nexport const DELETE_TODO ='DELETE_TODO'\r\n\r\nexport const ADD_TODO= 'ADD_TODO'\r\n\r\nexport const TOGGLE_AUTH= 'TOGGLE_AUTH'\r\n\r\n\r\n","import { TOGGLE_AUTH } from \"./types\";\r\n\r\n\r\nexport const authReducer = (state, action) =>{\r\n    const {type} = action\r\n\r\n    switch (type){\r\n        case  TOGGLE_AUTH:\r\n        return !state\r\n\r\n        default :\r\n        return state\r\n    }\r\n}","import React,{createContext, useEffect, useReducer} from 'react'\r\nimport { authReducer } from '../reducers/AuthReducer'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nconst AuthContextProvider =({children}) =>{\r\n    //State\r\n    \r\n    const [isAuthenticated,dispatch] = useReducer(authReducer,false)\r\n\r\n    //use effect\r\n    useEffect(()=>{\r\n      alert(isAuthenticated?'đã login thành công':'Bạn đã đăng xuất. Hãy đăng nhập để thấy những cv cần làm' )\r\n    }, [isAuthenticated])\r\n\r\n    //context data\r\n    const authContextData ={\r\n        isAuthenticated,\r\n        dispatch\r\n    }\r\n\r\n    //return\r\n   return(\r\n       <AuthContext.Provider  value={authContextData}>\r\n           {children}\r\n       </AuthContext.Provider>\r\n   )\r\n}\r\n\r\nexport default AuthContextProvider","\r\nimport React, {useState,  createContext}from 'react'\r\n\r\nexport const ThemeContext = createContext()\r\n\r\nconst ThemeContextProvider = ({children}) =>{\r\n    // State\r\n\r\n    const [theme, setTheme]= useState({\r\n        isLightTheme: true,\r\n        light: {\r\n            background:'rgb(240,240,240)',\r\n            color: 'black'\r\n        },\r\n\r\n        dark:{\r\n            background:'rgb(39,39,39)',\r\n            color:'white'\r\n\r\n        }\r\n    })\r\n    // function toggle theme\r\n    const toggleTheme =()=>{\r\n        setTheme({\r\n            ...theme,\r\n            isLightTheme: !theme.isLightTheme\r\n        })\r\n    }\r\n    /// contexxt data\r\n    const ThemeContextData ={\r\n        theme,\r\n        toggleTheme\r\n    }\r\n    //return provider\r\n    return (\r\n        <ThemeContext.Provider value={ThemeContextData}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ThemeContextProvider","import{\r\n    ADD_TODO,\r\n    DELETE_TODO,\r\n    SAVE_TODOS,\r\n    GET_TODOS\r\n\r\n} from './types'\r\n\r\n\r\nexport const todoReducer =(state, action)=> {\r\n    const {type, payload}= action\r\n\r\n    switch(type){\r\n        case GET_TODOS:\r\n            console.log('getting todos') \r\n            const todos = localStorage.getItem('todos')\r\n            if(todos) state = JSON.parse(todos)\r\n            return state\r\n\r\n        case SAVE_TODOS:\r\n            console.log('saving todos')\r\n            localStorage.setItem('todos',JSON.stringify(payload.todos)) \r\n            return state\r\n        \r\n        case ADD_TODO:\r\n                return ([...state,payload.todo])\r\n         \r\n        \r\n        case DELETE_TODO:\r\n            return state.filter(todo => todo.id !==payload.id)\r\n\r\n\r\n        default:\r\n                return state\r\n    }\r\n}","import React, {useReducer, createContext, useEffect} from 'react'\r\nimport { todoReducer } from '../reducers/TodoReducer'\r\nimport { GET_TODOS, SAVE_TODOS } from '../reducers/types'\r\n\r\nexport const TodoContext = createContext()\r\n\r\nconst TodoContextProvider =({children}) =>{\r\n    // state \r\n    // const[todos, setTodos]= useState([])\r\n    //ÚseEffect \r\n    const [todos, dispatch ]= useReducer(todoReducer, [])\r\n\r\n    useEffect(()=> {\r\n        dispatch({\r\n            type: GET_TODOS,\r\n            payload: null\r\n        })\r\n    },[])\r\n    useEffect (()=>{\r\n        dispatch({\r\n            type: SAVE_TODOS,\r\n            payload: {todos}\r\n        })\r\n    },[todos])\r\n\r\n\r\n  \r\n\r\n    // context data\r\n     const TodoContextData ={\r\n         todos,\r\n         dispatch\r\n     }\r\n     return (\r\n         <TodoContext.Provider value={TodoContextData}>\r\n             {children}\r\n         </TodoContext.Provider>\r\n     )\r\n    }\r\n\r\n    export default TodoContextProvider","import React,{useContext} from 'react'\r\nimport { ThemeContext } from './contexts/ThemeContext'\r\nimport { AuthContext } from './contexts/AuthContext'\r\nimport { TOGGLE_AUTH } from './reducers/types'\r\n\r\nconst Navbar =()=>{\r\n    //Load Thême context\r\n    const {theme} = useContext(ThemeContext)\r\n    const {isLightTheme,light, dark}= theme\r\n    const style = isLightTheme?light:dark\r\n   \r\n// Load auth context\r\nconst {isAuthenticated, dispatch}= useContext(AuthContext)\r\n\r\n    return(\r\n        <div className=\"navbar\" style={style}>\r\n            <h1>My hook app</h1>\r\n            <ul>\r\n                <li>Home</li>\r\n                <li>About</li>\r\n                <li>\r\n                    {isAuthenticated ? 'You are logged in ':  ''}\r\n                    <button onClick={()=>{\r\n                        dispatch(\r\n                            {\r\n                                type: TOGGLE_AUTH\r\n                            }\r\n                        )\r\n                    }}>\r\n                        {isAuthenticated ? 'Logout': 'Login'}\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Navbar","import React, {useContext} from 'react'\r\nimport { ThemeContext } from './contexts/ThemeContext'\r\n\r\n\r\nconst ThemeToggle = () => {\r\n\r\n   const {toggleTheme} = useContext(ThemeContext)\r\n    return (\r\n        <div className=\"toggle-btn\" >\r\n            <button onClick={toggleTheme} >Toggle Theme</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeToggle\r\n","import React,{useContext} from 'react'\r\nimport { DELETE_TODO } from './reducers/types'\r\nimport { ThemeContext } from './contexts/ThemeContext'\r\nimport { TodoContext } from './contexts/TodoContex'\r\n\r\nconst TodoItem = ({todo}) => {\r\n    //Load Theme\r\n    const {theme} = useContext(ThemeContext)\r\n    const {isLightTheme, light,dark}= theme\r\n\r\n    const style = isLightTheme ? light: dark\r\n\r\n    //Load TodoContext\r\n    const {dispatch}= useContext(TodoContext)\r\n\r\n    return <li onClick={()=>{\r\n        dispatch ({\r\n            type: DELETE_TODO,\r\n            payload:{\r\n                id: todo.id\r\n            }\r\n        })\r\n    }} style={style}>{todo.title}</li>   /*cách 1*/\r\n    //  cách 2 <li onClick={()=> {deleteTodo(todo.id)}} style={style}>{todo.title}</li>\r\n}\r\n   \r\n\r\n\r\nexport default TodoItem\r\n","import React,{useState, useContext} from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ADD_TODO } from './reducers/types';\r\nimport { ThemeContext } from './contexts/ThemeContext'\r\nimport { TodoContext } from './contexts/TodoContex';\r\n\r\n\r\nconst TodoForm = () => {\r\n    //Load context theme\r\n    const {theme}= useContext(ThemeContext)\r\n    const {isLightTheme, light, dark}= theme\r\n    const style = isLightTheme ? light: dark\r\n    //Load context todo\r\n    const {dispatch} = useContext(TodoContext)\r\n\r\n\r\n\r\n\r\n// For this component only\r\n    const [title, setTitle]= useState('')\r\n\r\n    const onTitleChange = event =>{\r\n        setTitle(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = event =>{\r\n        event.preventDefault()\r\n        dispatch({\r\n           type: ADD_TODO,\r\n           payload: {\r\n               todo:{\r\n                   id: uuidv4(),\r\n                   title\r\n               }\r\n           }\r\n        })\r\n        setTitle('')\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" name=\"title\" style={style}\r\n          onChange={onTitleChange} value={title} placeholder =\"enter a new todo....\"\r\n          required/>\r\n          <input style={style} type=\"submit\" \r\n          value=\"Add\" />\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, {useContext} from 'react'\r\nimport TodoItem from './TodoItem'\r\nimport TodoForm from './TodoForm'\r\nimport { TodoContext } from './contexts/TodoContex'\r\nimport { AuthContext } from './contexts/AuthContext';\r\n\r\nconst Todo = () => {\r\n\r\n// load todo context\r\nconst {todos}= useContext(TodoContext)\r\n    \r\n// Load auth contex\r\n const {isAuthenticated} = useContext(AuthContext)\r\n    \r\n\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <TodoForm />\r\n            {isAuthenticated ?(\r\n                <ul>\r\n                \r\n                {todos.map(todo => (\r\n                    <TodoItem todo={todo} key={todo.id} />\r\n                    \r\n                ))}\r\n                \r\n            </ul>\r\n            ): (<p style={{textAlign:'center'}}> You are not Login</p>)\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import AuthContextProvider from './components/contexts/AuthContext';\nimport ThemeContextProvider from './components/contexts/ThemeContext'\nimport TodoContextProvider from './components/contexts/TodoContex';\nimport Navbar from \"./components/Navbar\";\nimport ThemeToggle from \"./components/ThemeToggle\";\nimport Todo from \"./components/Todo\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeContextProvider>\n        <AuthContextProvider>\n          <Navbar/>\n            <TodoContextProvider>\n              <Todo/>\n            </TodoContextProvider>\n          </AuthContextProvider>\n        <ThemeToggle/>\n      </ThemeContextProvider>\n    \n\n       \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}